spring.main.allow-bean-definition-overriding=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
spring.cache.jcache.config=classpath:hazelcast.xml

#Login
bucket4j.filters[0].cache-name=rate-limit
bucket4j.filters[0].filter-method=servlet
bucket4j.filters[0].http-response-body={ "message": "Too many requests" }
bucket4j.filters[0].url=/auth*
bucket4j.filters[0].rate-limits[0].expression=@authService.loginKey(getRemoteAddr())
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=3
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=1
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=minutes
bucket4j.filters[0].rate-limits[0].bandwidths[0].fixed-refill-interval=5
bucket4j.filters[0].rate-limits[0].bandwidths[0].fixed-refill-interval-unit=minutes

#todas urls
bucket4j.filters[1].cache-name=${bucket4j.filters[0].cache-name}
bucket4j.filters[1].filter-method=${bucket4j.filters[0].filter-method}
bucket4j.filters[1].http-response-body=${bucket4j.filters[0].http-response-body}
bucket4j.filters[1].url=.*
bucket4j.filters[1].rate-limits[0].skip-condition=getRequestURI().contains('/actuator')
bucket4j.filters[1].rate-limits[0].expression=getRemoteAddr()
bucket4j.filters[1].rate-limits[0].bandwidths[0].capacity=5
bucket4j.filters[1].rate-limits[0].bandwidths[0].time=1
bucket4j.filters[1].rate-limits[0].bandwidths[0].unit=minutes
bucket4j.filters[1].rate-limits[0].bandwidths[0].fixed-refill-interval=1
bucket4j.filters[1].rate-limits[0].bandwidths[0].fixed-refill-interval-unit=minutes

#metricas - /actuator/metrics/bucket4j_summary_consumed
bucket4j.filters[0].metrics.enabled=true
bucket4j.filters[0].metrics.types=REJECTED_COUNTER
bucket4j.filters[0].metrics.tags[0].key=IP
bucket4j.filters[0].metrics.tags[0].expression=getRemoteAddr()
bucket4j.filters[0].metrics.tags[0].types=CONSUMED_COUNTER
bucket4j.filters[0].metrics.tags[1].key=URL
bucket4j.filters[0].metrics.tags[1].expression=getRequestURI()